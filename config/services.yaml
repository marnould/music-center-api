# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    spotify_client_id: '%env(SPOTIFY_CLIENT_ID)%'
    spotify_client_secret: '%env(SPOTIFY_CLIENT_SECRET)%'
    youtube_client_id: '%env(YOUTUBE_CLIENT_ID)%'
    youtube_client_secret: '%env(YOUTUBE_CLIENT_SECRET)%'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $spotifyClientId: '%spotify_client_id%'
            $spotifyClientSecret: '%spotify_client_secret%'
            $youtubeClientId: '%youtube_client_id%'
            $youtubeClientSecret: '%youtube_client_secret%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
#    App\:
#        resource: '../src/'
#        exclude:
#        - '../src/DependencyInjection/'
#        - '../src/Entity/'
#        - '../src/Kernel.php'

    Core\:
        resource: '../src/Core/'
    Track\:
        resource: '../src/Track/'

    # Declaration of handlerInterfaces
    _instanceof:
        Core\Domain\Bus\Query\QueryHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: query.bus }


    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class

    Track\Presentation\Http\Rest\Controller\:
        resource: '../src/Track/Presentation/Http/Rest/Controller'
        tags: ['controller.service_arguments']

    # Add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Clients
    Core\Infrastructure\HttpClient\SpotifyHttpClient:
        arguments:
            $spotifyClientId: '%spotify_client_id%'
            $spotifyClientSecret: '%spotify_client_secret%'

    Core\Infrastructure\HttpClient\YoutubeHttpClient:
        arguments:
            $youtubeClientId: '%youtube_client_id%'
            $youtubeClientSecret: '%youtube_client_secret%'